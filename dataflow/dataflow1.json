{
	"name": "dataflow1",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "DelimitedText6",
						"type": "DatasetReference"
					},
					"name": "ACTORS"
				},
				{
					"dataset": {
						"referenceName": "DelimitedText7",
						"type": "DatasetReference"
					},
					"name": "MOVIES"
				},
				{
					"dataset": {
						"referenceName": "COUNTRIES",
						"type": "DatasetReference"
					},
					"name": "COUNTRIES"
				},
				{
					"dataset": {
						"referenceName": "GENRES",
						"type": "DatasetReference"
					},
					"name": "GENRES"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "AzureSqlTable1",
						"type": "DatasetReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "join1"
				},
				{
					"name": "join2"
				},
				{
					"name": "join3"
				},
				{
					"name": "select1"
				}
			],
			"scriptLines": [
				"source(output(",
				"          id as string,",
				"          name as string,",
				"          role as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: true,",
				"     ignoreNoFilesFound: false) ~> ACTORS",
				"source(output(",
				"          id as string,",
				"          name as string,",
				"          date as string,",
				"          tagline as string,",
				"          description as string,",
				"          minute as string,",
				"          rating as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> MOVIES",
				"source(output(",
				"          id as string,",
				"          country as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> COUNTRIES",
				"source(output(",
				"          id as string,",
				"          genre as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> GENRES",
				"ACTORS, MOVIES join(ACTORS@id == MOVIES@id,",
				"     joinType:'left',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> join1",
				"join1, COUNTRIES join(MOVIES@id == COUNTRIES@id,",
				"     joinType:'left',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> join2",
				"join2, GENRES join(COUNTRIES@id == GENRES@id,",
				"     joinType:'left',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> join3",
				"join3 select(mapColumn(",
				"          actor_id = ACTORS@id,",
				"          actor_name = ACTORS@name,",
				"          actor_role = role,",
				"          movie_id = MOVIES@id,",
				"          movie_title = MOVIES@name,",
				"          release_year = date,",
				"          tagline,",
				"          description,",
				"          runtime_minutes = minute,",
				"          rating,",
				"          country,",
				"          id = GENRES@id,",
				"          genre",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select1",
				"select1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     deletable:true,",
				"     insertable:true,",
				"     updateable:true,",
				"     upsertable:true,",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError',",
				"     mapColumn(",
				"          actor_id,",
				"          actor_name,",
				"          actor_role,",
				"          movie_id,",
				"          movie_title,",
				"          release_year,",
				"          tagline,",
				"          description,",
				"          runtime_minutes,",
				"          rating,",
				"          country,",
				"          id,",
				"          genre",
				"     )) ~> sink1"
			]
		}
	}
}